#!/bin/bash

EBS_DEVICE=/dev/xvdc
EBS_MOUNTPATH=/mnt/ebs

get_snapshot_name() {
  snapshot_name=$1

  d=$(date +%Y%m%d)

  echo "${snapshot_name}${d}";
}

hook_init() {
  mount|grep -qs -v "^${EBS_DEVICE} on ${EBS_MOUNTPATH} type"
  if [ $? -eq 0 ]
  then
    mkdir -p "$EBS_MOUNTPATH"
    mount "$EBS_DEVICE" "$EBS_MOUNTPATH"
  else
    true
  fi

  return $?;
}

hook_check() {
  grep -qs "$EBS_MOUNTPATH" /proc/mounts

  return $?
}

hook_error() {
  umount "$EBS_MOUNTPATH" > /dev/null 2>&1 || /bin/true
}

hook_success() {
  umount "$EBS_MOUNTPATH" > /dev/null 2>&1
}

hook_before_create_snapshot() {
  snapshot_name=$1

  su -c "psql -c \"SELECT pg_start_backup('$snapshot_name');\"" -l postgres

  return "$?"
}

hook_after_create_snapshot() {
  su -c "psql -c \"SELECT pg_stop_backup();\"" -l postgres

  return "$?"
}

hook_backup() {
  mount_path=$1
  snapshot_name=$2

  tar czf "$EBS_MOUNTPATH/$snapshot_name.tar.gz" -C $mount_path .

  return $?
}
