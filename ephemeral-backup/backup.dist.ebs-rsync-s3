#!/bin/bash
#
# Backup snapshot with rsync on a EBS disk and archive it on S3 with AWS CLI
#

EBS_DEVICE=/dev/xvdc
EBS_MOUNTPATH=/mnt/ebs
EBS_BACKUPDIR="$EBS_MOUNTPATH"

AWS_CLI=$(which aws)
AWS_PROFILE="default"
AWS_S3_BUCKET="s3://my_bucket"

get_snapshot_name() {
    snapshot_name=$1

    d=$(date +%Y%m%d)

    echo "${snapshot_name}${d}"
}

hook_init() {
    mount|grep -qs -v "^${EBS_DEVICE} on ${EBS_MOUNTPATH} type"
    if [ $? -eq 0 ]
    then
        mkdir -p "$EBS_MOUNTPATH"
        mount "$EBS_DEVICE" "$EBS_MOUNTPATH"
    else
        true
    fi

    return $?;
}

hook_check() {
    grep -qs "$EBS_MOUNTPATH" /proc/mounts

    return $?
}

hook_error() {
    umount "$EBS_MOUNTPATH" > /dev/null 2>&1 || /bin/true
}

hook_success() {
    umount "$EBS_MOUNTPATH" > /dev/null 2>&1 || /bin/true
}

hook_backup() {
    mount_path=$1
    snapshot_name=$2

    mkdir -p "$EBS_BACKUPDIR"
    rsync -a --delete "$mount_path/" "$EBS_BACKUPDIR/$snapshot_name/"
    if [ $? -ne 0 ]; then
        return $?
    fi

    $AWS_CLI --profile "$AWS_PROFILE" s3 sync "$EBS_BACKUPDIR/$snapshot_name/" "$AWS_S3_BUCKET/$snapshot_name/"
    if [ $? -ne 0 ]; then
        return $?
    fi

    rm -fr "${EBS_BACKUPDIR:?}/$snapshot_name/"

    return $?
}
